{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","way","scrollerRight","props","frameSize","itemWidth","images","infinite","newWay","Math","max","length","cycleWay","setState","scrollerLeft","min","limit","this","animationDuration","className","style","width","transform","transitionDuration","map","img","index","src","alt","String","type","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uPAeaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,GAFT,EAKEC,cAAgB,WACd,MAKI,EAAKC,MAJPC,EADF,EACEA,UACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,SAEMN,EAAQ,EAAKD,MAAbC,IACFO,EAASC,KAAKC,IAClBT,EAAMG,EAAYC,GAChBA,GAAaC,EAAOK,OAASP,IAE3BQ,EAAWJ,IAAWP,EAAM,EAAIO,EAEtC,EAAKK,SAAS,CACZZ,IAAKM,EAAWK,EAAWJ,KApBjC,EAwBEM,aAAe,WACb,MAKI,EAAKX,MAJPC,EADF,EACEA,UACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,SAEMN,EAAQ,EAAKD,MAAbC,IACFO,EAASC,KAAKM,IAAI,EAAGd,EAAMG,EAAYC,GACvCW,GAAUX,GAAaC,EAAOK,OAASP,GACvCQ,EAAWJ,IAAWP,EAAMe,EAAQR,EAE1C,EAAKK,SAAS,CACZZ,IAAKM,EAAWK,EAAWJ,KArCjC,4CAyCE,WACE,MAKIS,KAAKd,MAJPE,EADF,EACEA,UACAD,EAFF,EAEEA,UACAc,EAHF,EAGEA,kBACAZ,EAJF,EAIEA,OAEML,EAAQgB,KAAKjB,MAAbC,IAER,OACE,sBAAKkB,UAAU,WAAWC,MAAO,CAAEC,MAAOhB,EAAYD,GAAtD,UACE,oBACEe,UAAU,iBACVC,MAAO,CACLE,UAAU,cAAD,OAAgBrB,EAAhB,OACTsB,mBAAmB,GAAD,OAAKL,EAAL,OAJtB,SAOGZ,EAAOkB,KAAI,SAACC,EAAKC,GAAN,OACV,6BACE,qBACEC,IAAKF,EACLG,IAAKC,OAAOH,EAAQ,GACpBN,MAAO,CAAEC,MAAOhB,YAKxB,sBACEc,UAAU,oBACVC,MAAO,CAAEC,MAAOhB,EAAYD,GAF9B,UAIE,wBACEe,UAAU,uBACVW,KAAK,SACL,aAAW,cACXC,QAASd,KAAKH,eAEhB,wBACEK,UAAU,uBACVW,KAAK,SACL,aAAW,eACXC,QAASd,KAAKf,0BAnF1B,GAA8B8B,IAAMC,WCP9BC,E,4MACJlC,MAAQ,CACNM,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWW,KAAKjB,MAAhBM,OAER,OACE,sBAAKa,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,iCACoBb,EAAOK,OAD3B,aAIA,cAAC,EAAD,CACEL,OAAQA,EACRF,UAAW,EACXC,UAAW,IACXa,kBAAmB,IACnBX,UAAQ,W,GA9BAyB,IAAMC,WAqCTC,IC1CfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6e7a371c.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  way: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    way: 0,\n  };\n\n  scrollerRight = () => {\n    const {\n      frameSize,\n      itemWidth,\n      images,\n      infinite,\n    } = this.props;\n    const { way } = this.state;\n    const newWay = Math.max(\n      way - frameSize * itemWidth,\n      -(itemWidth * (images.length - frameSize)),\n    );\n    const cycleWay = newWay === way ? 0 : newWay;\n\n    this.setState({\n      way: infinite ? cycleWay : newWay,\n    });\n  };\n\n  scrollerLeft = () => {\n    const {\n      frameSize,\n      itemWidth,\n      images,\n      infinite,\n    } = this.props;\n    const { way } = this.state;\n    const newWay = Math.min(0, way + frameSize * itemWidth);\n    const limit = -(itemWidth * (images.length - frameSize));\n    const cycleWay = newWay === way ? limit : newWay;\n\n    this.setState({\n      way: infinite ? cycleWay : newWay,\n    });\n  };\n\n  render() {\n    const {\n      itemWidth,\n      frameSize,\n      animationDuration,\n      images,\n    } = this.props;\n    const { way } = this.state;\n\n    return (\n      <div className=\"Carousel\" style={{ width: itemWidth * frameSize }}>\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${way}px)`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((img, index) => (\n            <li>\n              <img\n                src={img}\n                alt={String(index + 1)}\n                style={{ width: itemWidth }}\n              />\n            </li>\n          ))}\n        </ul>\n        <div\n          className=\"Carousel__wrapper\"\n          style={{ width: itemWidth * frameSize }}\n        >\n          <button\n            className=\"Carousel__prevButton\"\n            type=\"button\"\n            aria-label=\"Left scroll\"\n            onClick={this.scrollerLeft}\n          />\n          <button\n            className=\"Carousel__nextButton\"\n            type=\"button\"\n            aria-label=\"Right scroll\"\n            onClick={this.scrollerRight}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}