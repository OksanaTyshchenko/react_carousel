{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","way","scrollerRight","props","frameSize","itemWidth","images","infinite","newWay","Math","max","length","cycleWay","setState","scrollerLeft","min","limit","this","animationDuration","className","style","width","transform","transitionDuration","map","img","index","src","alt","String","type","onClick","React","Component","App","handleFrameSizeChange","event","target","value","handleItemWidthChange","handleAnimationTimeChange","handleInfiniteChange","step","onChange","placeholder","ReactDOM","render","document","getElementById"],"mappings":"uPAeaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,GAFT,EAKEC,cAAgB,WACd,MAKI,EAAKC,MAJPC,EADF,EACEA,UACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,SAEMN,EAAQ,EAAKD,MAAbC,IACFO,EAASC,KAAKC,IAClBT,EAAMG,EAAYC,GAChBA,GAAaC,EAAOK,OAASP,IAE3BQ,EAAWJ,IAAWP,EAAM,EAAIO,EAEtC,EAAKK,SAAS,CACZZ,IAAKM,EAAWK,EAAWJ,KApBjC,EAwBEM,aAAe,WACb,MAKI,EAAKX,MAJPC,EADF,EACEA,UACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,SAEMN,EAAQ,EAAKD,MAAbC,IACFO,EAASC,KAAKM,IAAI,EAAGd,EAAMG,EAAYC,GACvCW,GAAUX,GAAaC,EAAOK,OAASP,GACvCQ,EAAWJ,IAAWP,EAAMe,EAAQR,EAE1C,EAAKK,SAAS,CACZZ,IAAKM,EAAWK,EAAWJ,KArCjC,4CAyCE,WACE,MAKIS,KAAKd,MAJPE,EADF,EACEA,UACAD,EAFF,EAEEA,UACAc,EAHF,EAGEA,kBACAZ,EAJF,EAIEA,OAEML,EAAQgB,KAAKjB,MAAbC,IAER,OACE,sBAAKkB,UAAU,WAAWC,MAAO,CAAEC,MAAOhB,EAAYD,GAAtD,UACE,oBACEe,UAAU,iBACVC,MAAO,CACLE,UAAU,cAAD,OAAgBrB,EAAhB,OACTsB,mBAAmB,GAAD,OAAKL,EAAL,OAJtB,SAOGZ,EAAOkB,KAAI,SAACC,EAAKC,GAAN,OACV,6BACE,qBACEC,IAAKF,EACLG,IAAKC,OAAOH,EAAQ,GACpBN,MAAO,CAAEC,MAAOhB,YAKxB,sBACEc,UAAU,oBACVC,MAAO,CAAEC,MAAOhB,EAAYD,GAF9B,UAIE,wBACEe,UAAU,uBACVW,KAAK,SACL,aAAW,cACXC,QAASd,KAAKH,eAEhB,wBACEK,UAAU,uBACVW,KAAK,SACL,aAAW,eACXC,QAASd,KAAKf,0BAnF1B,GAA8B8B,IAAMC,WCH9BC,E,4MACJlC,MAAe,CACbM,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFF,UAAW,EACXC,UAAW,IACXa,kBAAmB,IACnBX,UAAU,G,EAGZ4B,sBAAwB,SAACC,GACvB,EAAKvB,SAAS,CACZT,WAAagC,EAAMC,OAA4BC,S,EAInDC,sBAAwB,SAACH,GACvB,EAAKvB,SAAS,CACZR,WAAa+B,EAAMC,OAA4BC,S,EAInDE,0BAA4B,SAACJ,GAC3B,EAAKvB,SAAS,CACZK,mBAAqBkB,EAAMC,OAA4BC,S,EAI3DG,qBAAuB,WACrB,IAAQlC,EAAa,EAAKP,MAAlBO,SAER,EAAKM,SAAS,CACZN,UAAWA,K,4CAIf,WACE,MAMIU,KAAKjB,MALPM,EADF,EACEA,OACAF,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAa,EAJF,EAIEA,kBACAX,EALF,EAKEA,SAGF,OACE,sBAAKY,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,iCACoBb,EAAOK,OAD3B,aAIA,cAAC,EAAD,CACEL,OAAQA,EACRF,UAAWA,EACXC,UAAWA,EACXa,kBAAmBA,EACnBX,SAAUA,IAEZ,uBAAMY,UAAU,YAAhB,UACE,gCACE,sBAAMA,UAAU,kBAAhB,4BACA,uBACEW,KAAK,SACLf,IAAI,IACJL,IAAI,IACJgC,KAAK,IACLJ,MAAOlC,EACPuC,SAAU1B,KAAKkB,sBACfhB,UAAU,kBAId,gCACE,gDACA,uBACEW,KAAK,OACLQ,MAAOjC,EACPuC,YAAY,MACZD,SAAU1B,KAAKsB,sBACfpB,UAAU,kBAId,gCACE,oDACA,uBACEW,KAAK,OACLQ,MAAOpB,EACP0B,YAAY,OACZD,SAAU1B,KAAKuB,0BACfrB,UAAU,kBAId,gCACE,wDACA,uBACEW,KAAK,WACLa,SAAU1B,KAAKwB,qBACftB,UAAU,+B,GA7GNa,IAAMC,WAsHTC,IC/HfW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e929cf35.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  way: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    way: 0,\n  };\n\n  scrollerRight = () => {\n    const {\n      frameSize,\n      itemWidth,\n      images,\n      infinite,\n    } = this.props;\n    const { way } = this.state;\n    const newWay = Math.max(\n      way - frameSize * itemWidth,\n      -(itemWidth * (images.length - frameSize)),\n    );\n    const cycleWay = newWay === way ? 0 : newWay;\n\n    this.setState({\n      way: infinite ? cycleWay : newWay,\n    });\n  };\n\n  scrollerLeft = () => {\n    const {\n      frameSize,\n      itemWidth,\n      images,\n      infinite,\n    } = this.props;\n    const { way } = this.state;\n    const newWay = Math.min(0, way + frameSize * itemWidth);\n    const limit = -(itemWidth * (images.length - frameSize));\n    const cycleWay = newWay === way ? limit : newWay;\n\n    this.setState({\n      way: infinite ? cycleWay : newWay,\n    });\n  };\n\n  render() {\n    const {\n      itemWidth,\n      frameSize,\n      animationDuration,\n      images,\n    } = this.props;\n    const { way } = this.state;\n\n    return (\n      <div className=\"Carousel\" style={{ width: itemWidth * frameSize }}>\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${way}px)`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((img, index) => (\n            <li>\n              <img\n                src={img}\n                alt={String(index + 1)}\n                style={{ width: itemWidth }}\n              />\n            </li>\n          ))}\n        </ul>\n        <div\n          className=\"Carousel__wrapper\"\n          style={{ width: itemWidth * frameSize }}\n        >\n          <button\n            className=\"Carousel__prevButton\"\n            type=\"button\"\n            aria-label=\"Left scroll\"\n            onClick={this.scrollerLeft}\n          />\n          <button\n            className=\"Carousel__nextButton\"\n            type=\"button\"\n            aria-label=\"Right scroll\"\n            onClick={this.scrollerRight}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleFrameSizeChange = (event: React.SyntheticEvent<EventTarget>) => {\n    this.setState({\n      frameSize: +(event.target as HTMLInputElement).value,\n    });\n  };\n\n  handleItemWidthChange = (event: React.SyntheticEvent<EventTarget>) => {\n    this.setState({\n      itemWidth: +(event.target as HTMLInputElement).value,\n    });\n  };\n\n  handleAnimationTimeChange = (event: React.SyntheticEvent<EventTarget>) => {\n    this.setState({\n      animationDuration: +(event.target as HTMLInputElement).value,\n    });\n  };\n\n  handleInfiniteChange = () => {\n    const { infinite } = this.state;\n\n    this.setState({\n      infinite: !infinite,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <form className=\"App__form\">\n          <div>\n            <span className=\"App__formTitle1\">Count images: </span>\n            <input\n              type=\"number\"\n              min=\"2\"\n              max=\"5\"\n              step=\"1\"\n              value={frameSize}\n              onChange={this.handleFrameSizeChange}\n              className=\"App__input\"\n            />\n          </div>\n\n          <div>\n            <span>Size image: </span>\n            <input\n              type=\"text\"\n              value={itemWidth}\n              placeholder=\"130\"\n              onChange={this.handleItemWidthChange}\n              className=\"App__input\"\n            />\n          </div>\n\n          <div>\n            <span>Animation time: </span>\n            <input\n              type=\"text\"\n              value={animationDuration}\n              placeholder=\"1000\"\n              onChange={this.handleAnimationTimeChange}\n              className=\"App__input\"\n            />\n          </div>\n\n          <div>\n            <span>Infinite animation: </span>\n            <input\n              type=\"checkbox\"\n              onChange={this.handleInfiniteChange}\n              className=\"App__checkbox\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}