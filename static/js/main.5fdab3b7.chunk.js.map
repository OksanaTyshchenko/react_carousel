{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","way","scrollerRight","props","frameSize","itemWidth","images","infinite","step","newWay","Math","max","length","cycleWay","setState","scrollerLeft","min","limit","this","animationDuration","className","style","width","transform","transitionDuration","map","img","index","src","alt","String","type","onClick","React","Component","App","handleValueSetChange","event","target","name","value","newState","handleInfiniteChange","onChange","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5fdab3b7.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n  step: number;\n};\n\ntype State = {\n  way: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    way: 0,\n  };\n\n  scrollerRight = () => {\n    const {\n      frameSize,\n      itemWidth,\n      images,\n      infinite,\n      step,\n    } = this.props;\n    const { way } = this.state;\n    const newWay = Math.max(\n      way - step * itemWidth,\n      -(itemWidth * (images.length - frameSize)),\n    );\n    const cycleWay = newWay === way ? 0 : newWay;\n\n    this.setState({\n      way: infinite ? cycleWay : newWay,\n    });\n  };\n\n  scrollerLeft = () => {\n    const {\n      frameSize,\n      itemWidth,\n      images,\n      infinite,\n      step,\n    } = this.props;\n    const { way } = this.state;\n    const newWay = Math.min(0, way + step * itemWidth);\n    const limit = -(itemWidth * (images.length - frameSize));\n    const cycleWay = newWay === way ? limit : newWay;\n\n    this.setState({\n      way: infinite ? cycleWay : newWay,\n    });\n  };\n\n  render() {\n    const {\n      itemWidth,\n      frameSize,\n      animationDuration,\n      images,\n    } = this.props;\n    const { way } = this.state;\n\n    return (\n      <div className=\"Carousel\" style={{ width: itemWidth * frameSize }}>\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${way}px)`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((img, index) => (\n            <li key={img}>\n              <img\n                src={img}\n                alt={String(index + 1)}\n                style={{ width: itemWidth }}\n              />\n            </li>\n          ))}\n        </ul>\n        <div\n          className=\"Carousel__wrapper\"\n          style={{ width: itemWidth * frameSize }}\n        >\n          <button\n            className=\"Carousel__prevButton\"\n            type=\"button\"\n            aria-label=\"Left scroll\"\n            onClick={this.scrollerLeft}\n          />\n          <button\n            className=\"Carousel__nextButton\"\n            type=\"button\"\n            aria-label=\"Right scroll\"\n            onClick={this.scrollerRight}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n  step: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    step: 3,\n  };\n\n  handleValueSetChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { target: { name, value } } = event;\n    const newState = { [name]: +value } as unknown as Pick<State, keyof State>;\n\n    this.setState(newState);\n  };\n\n  handleInfiniteChange = () => {\n    const { infinite } = this.state;\n\n    this.setState({\n      infinite: !infinite,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n      step,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <form className=\"App__form\">\n          <div>\n            <span className=\"App__formTitle1\">Count images: </span>\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              min=\"2\"\n              max=\"5\"\n              step=\"1\"\n              value={frameSize}\n              onChange={this.handleValueSetChange}\n              className=\"App__input\"\n            />\n          </div>\n\n          <div>\n            <span className=\"App__formTitle1\">Count images on click: </span>\n            <input\n              type=\"number\"\n              name=\"step\"\n              min=\"2\"\n              max=\"5\"\n              step=\"1\"\n              value={step}\n              onChange={this.handleValueSetChange}\n              className=\"App__input\"\n            />\n          </div>\n\n          <div>\n            <span>Size image: </span>\n            <input\n              type=\"text\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              placeholder=\"130\"\n              onChange={this.handleValueSetChange}\n              className=\"App__input\"\n            />\n          </div>\n\n          <div>\n            <span>Animation time: </span>\n            <input\n              type=\"text\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              placeholder=\"1000\"\n              onChange={this.handleValueSetChange}\n              className=\"App__input\"\n            />\n          </div>\n\n          <div>\n            <span>Infinite animation: </span>\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              onChange={this.handleInfiniteChange}\n              className=\"App__checkbox\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}